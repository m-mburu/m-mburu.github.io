{
  "hash": "60fa8b2cce99fa30b4f12b436b9b6318",
  "result": {
    "markdown": "---\ntitle: \"Tanzanian Water Pumps\"\nauthor: \"Mburu\"\ndate: \"4/21/2020\"\noutput:\n  html_document:\n    theme: united\n    highlight: pygments\n    df_print: paged\n    toc: yes\n  prettydoc::html_pretty:\n    highlight: github\n    theme: leonids\n    toc: yes\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(knitr)\nlibrary(broom)\nlibrary(caret)\nlibrary(kableExtra)\nlibrary(ggthemes)\nlibrary(DT)\n```\n:::\n\n\n## \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_y <- fread(\"0bf8bc6e-30d0-4c50-956a-603fc693d966.csv\")\ntrain_x <-  fread(\"4910797b-ee55-40a7-8668-10efd5c1b960.csv\")\n\ntest <- fread(\"702ddfc5-68cd-4d1d-a0de-f5f566f76d91.csv\")\n```\n:::\n\n\n## \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data <- merge(train_y, train_x, by = \"id\")\ntrain_data[, set := \"train\"]\n\ntest[, set := \"test\"]\n\npump_data <- rbindlist(list(train_data, test), fill = T)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data[, .N, by = status_group] %>%\n    .[, Perc :=  round(N/sum(N) * 100, 2)] %>%\n    datatable()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-0a2db2af1b2258c885bc\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0a2db2af1b2258c885bc\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\"],[\"non functional\",\"functional\",\"functional needs repair\"],[22824,32259,4317],[38.42,54.31,7.27]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>status_group<\\/th>\\n      <th>N<\\/th>\\n      <th>Perc<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npump_data[amount_tsh != 0, .(Mean = mean(amount_tsh),\n               Median = median(amount_tsh),\n               Min = min(amount_tsh),\n               Max = max(amount_tsh),\n               First_qurtile = quantile(amount_tsh, .25),\n               Third_qurtile = quantile(amount_tsh, .75)),\n           by = status_group] %>%\n  datatable()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-b04f455a2182aef0b944\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-b04f455a2182aef0b944\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\"],[\"functional\",\"non functional\",\"functional needs repair\",null],[1186.74016171433,715.495201827875,908.548463356974,1079.72538288288],[250,200,300,250],[0.25,0.2,6,0.2],[350000,117000,100000,200000],[50,50,100,50],[1000,500,600,1000]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>status_group<\\/th>\\n      <th>Mean<\\/th>\\n      <th>Median<\\/th>\\n      <th>Min<\\/th>\\n      <th>Max<\\/th>\\n      <th>First_qurtile<\\/th>\\n      <th>Third_qurtile<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6,7]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncol_class <- sapply(train_data, class)\nchar_cols <- names(col_class[col_class == \"character\"])\n\nchar_cols <- char_cols[char_cols != \"date_recorded\"]\nchar_cols\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"status_group\"          \"funder\"                \"installer\"            \n [4] \"wpt_name\"              \"basin\"                 \"subvillage\"           \n [7] \"region\"                \"lga\"                   \"ward\"                 \n[10] \"recorded_by\"           \"scheme_management\"     \"scheme_name\"          \n[13] \"extraction_type\"       \"extraction_type_group\" \"extraction_type_class\"\n[16] \"management\"            \"management_group\"      \"payment\"              \n[19] \"payment_type\"          \"water_quality\"         \"quality_group\"        \n[22] \"quantity\"              \"quantity_group\"        \"source\"               \n[25] \"source_type\"           \"source_class\"          \"waterpoint_type\"      \n[28] \"waterpoint_type_group\" \"set\"                  \n```\n:::\n:::\n\n\n## A lazy way of collapsing columns, Please DO NOT do it,\n* It's best to go through all columns one by one to see how well lumping together will be beneficial\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfactor_cols <- pump_data[, ..char_cols]\nfactor_cols[, (char_cols) := lapply(.SD, str_to_lower), .SDcols = char_cols]\nfactor_cols[, (char_cols) := lapply(.SD,  fct_lump_n, n = 20), .SDcols = char_cols]\n#factor_cols[, (char_cols) := lapply(.SD,  fct_lump_n, n = 5), .SDcols = char_cols]\nfactor_cols[factor_cols == \"\"] = NA\nfactor_cols[factor_cols == \"0\"] = NA\nfactor_cols[, (char_cols) :=lapply(.SD, fct_explicit_na, na_level = \"missing\"), .SDcols = char_cols]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchars_dat <- melt(factor_cols, id.vars = \"status_group\")\n\nchars_dat[, .(freq = .N), by = .(variable, value)] %>%\n  .[, perc := round(freq/sum(freq) * 100), by = .(variable)] %>%\n    datatable()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-80ca44b0b7efea3559dd\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-80ca44b0b7efea3559dd\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\",\"170\",\"171\",\"172\",\"173\",\"174\",\"175\",\"176\",\"177\",\"178\",\"179\",\"180\",\"181\",\"182\",\"183\",\"184\",\"185\",\"186\",\"187\",\"188\",\"189\",\"190\",\"191\",\"192\",\"193\",\"194\",\"195\",\"196\",\"197\",\"198\",\"199\",\"200\",\"201\",\"202\",\"203\",\"204\",\"205\",\"206\",\"207\",\"208\",\"209\",\"210\",\"211\",\"212\",\"213\",\"214\",\"215\",\"216\",\"217\",\"218\",\"219\",\"220\",\"221\",\"222\",\"223\",\"224\",\"225\",\"226\",\"227\",\"228\",\"229\",\"230\",\"231\",\"232\",\"233\",\"234\",\"235\",\"236\",\"237\",\"238\",\"239\",\"240\",\"241\",\"242\",\"243\",\"244\",\"245\",\"246\",\"247\",\"248\",\"249\",\"250\",\"251\",\"252\",\"253\",\"254\",\"255\",\"256\",\"257\",\"258\",\"259\",\"260\",\"261\",\"262\",\"263\",\"264\",\"265\",\"266\",\"267\",\"268\",\"269\",\"270\",\"271\",\"272\",\"273\",\"274\",\"275\",\"276\",\"277\",\"278\",\"279\",\"280\",\"281\",\"282\",\"283\",\"284\",\"285\",\"286\",\"287\",\"288\",\"289\",\"290\",\"291\",\"292\",\"293\",\"294\",\"295\",\"296\",\"297\",\"298\",\"299\",\"300\",\"301\",\"302\",\"303\",\"304\",\"305\",\"306\",\"307\",\"308\",\"309\",\"310\",\"311\",\"312\",\"313\",\"314\",\"315\",\"316\",\"317\"],[\"funder\",\"funder\",\"funder\",\"funder\",\"funder\",\"funder\",\"funder\",\"funder\",\"funder\",\"funder\",\"funder\",\"funder\",\"funder\",\"funder\",\"funder\",\"funder\",\"funder\",\"funder\",\"funder\",\"funder\",\"installer\",\"installer\",\"installer\",\"installer\",\"installer\",\"installer\",\"installer\",\"installer\",\"installer\",\"installer\",\"installer\",\"installer\",\"installer\",\"installer\",\"installer\",\"installer\",\"installer\",\"installer\",\"installer\",\"installer\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"wpt_name\",\"basin\",\"basin\",\"basin\",\"basin\",\"basin\",\"basin\",\"basin\",\"basin\",\"basin\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"subvillage\",\"region\",\"region\",\"region\",\"region\",\"region\",\"region\",\"region\",\"region\",\"region\",\"region\",\"region\",\"region\",\"region\",\"region\",\"region\",\"region\",\"region\",\"region\",\"region\",\"region\",\"region\",\"lga\",\"lga\",\"lga\",\"lga\",\"lga\",\"lga\",\"lga\",\"lga\",\"lga\",\"lga\",\"lga\",\"lga\",\"lga\",\"lga\",\"lga\",\"lga\",\"lga\",\"lga\",\"lga\",\"lga\",\"lga\",\"ward\",\"ward\",\"ward\",\"ward\",\"ward\",\"ward\",\"ward\",\"ward\",\"ward\",\"ward\",\"ward\",\"ward\",\"ward\",\"ward\",\"ward\",\"ward\",\"ward\",\"ward\",\"ward\",\"ward\",\"ward\",\"recorded_by\",\"scheme_management\",\"scheme_management\",\"scheme_management\",\"scheme_management\",\"scheme_management\",\"scheme_management\",\"scheme_management\",\"scheme_management\",\"scheme_management\",\"scheme_management\",\"scheme_management\",\"scheme_management\",\"scheme_management\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"scheme_name\",\"extraction_type\",\"extraction_type\",\"extraction_type\",\"extraction_type\",\"extraction_type\",\"extraction_type\",\"extraction_type\",\"extraction_type\",\"extraction_type\",\"extraction_type\",\"extraction_type\",\"extraction_type\",\"extraction_type\",\"extraction_type\",\"extraction_type\",\"extraction_type\",\"extraction_type\",\"extraction_type\",\"extraction_type_group\",\"extraction_type_group\",\"extraction_type_group\",\"extraction_type_group\",\"extraction_type_group\",\"extraction_type_group\",\"extraction_type_group\",\"extraction_type_group\",\"extraction_type_group\",\"extraction_type_group\",\"extraction_type_group\",\"extraction_type_group\",\"extraction_type_group\",\"extraction_type_class\",\"extraction_type_class\",\"extraction_type_class\",\"extraction_type_class\",\"extraction_type_class\",\"extraction_type_class\",\"extraction_type_class\",\"management\",\"management\",\"management\",\"management\",\"management\",\"management\",\"management\",\"management\",\"management\",\"management\",\"management\",\"management\",\"management_group\",\"management_group\",\"management_group\",\"management_group\",\"management_group\",\"payment\",\"payment\",\"payment\",\"payment\",\"payment\",\"payment\",\"payment\",\"payment_type\",\"payment_type\",\"payment_type\",\"payment_type\",\"payment_type\",\"payment_type\",\"payment_type\",\"water_quality\",\"water_quality\",\"water_quality\",\"water_quality\",\"water_quality\",\"water_quality\",\"water_quality\",\"water_quality\",\"quality_group\",\"quality_group\",\"quality_group\",\"quality_group\",\"quality_group\",\"quality_group\",\"quantity\",\"quantity\",\"quantity\",\"quantity\",\"quantity\",\"quantity_group\",\"quantity_group\",\"quantity_group\",\"quantity_group\",\"quantity_group\",\"source\",\"source\",\"source\",\"source\",\"source\",\"source\",\"source\",\"source\",\"source\",\"source\",\"source_type\",\"source_type\",\"source_type\",\"source_type\",\"source_type\",\"source_type\",\"source_type\",\"source_class\",\"source_class\",\"source_class\",\"waterpoint_type\",\"waterpoint_type\",\"waterpoint_type\",\"waterpoint_type\",\"waterpoint_type\",\"waterpoint_type\",\"waterpoint_type\",\"waterpoint_type_group\",\"waterpoint_type_group\",\"waterpoint_type_group\",\"waterpoint_type_group\",\"waterpoint_type_group\",\"waterpoint_type_group\",\"set\",\"set\"],[\"tasaf\",\"Other\",\"germany republi\",\"government of tanzania\",\"water\",\"world bank\",\"hesawa\",\"missing\",\"kkkt\",\"danida\",\"world vision\",\"district council\",\"unicef\",\"rwssp\",\"dwsp\",\"norad\",\"ministry of water\",\"tcrs\",\"private individual\",\"dhv\",\"tasaf\",\"Other\",\"ces\",\"government\",\"gover\",\"commu\",\"dwe\",\"amref\",\"missing\",\"kkkt\",\"danida\",\"world vision\",\"rwe\",\"hesawa\",\"community\",\"tcrs\",\"danid\",\"district council\",\"central government\",\"lga\",\"Other\",\"none\",\"bombani\",\"mkuyuni\",\"shuleni\",\"mbugani\",\"sokoni\",\"sekondari\",\"zahanati\",\"school\",\"msikitini\",\"kanisani\",\"kituo cha afya\",\"shule ya msingi\",\"mkombozi\",\"ofisini\",\"umoja\",\"madukani\",\"upendo\",\"muungano\",\"shule\",\"lake tanganyika\",\"rufiji\",\"wami / ruvu\",\"pangani\",\"internal\",\"lake victoria\",\"lake nyasa\",\"ruvuma / southern coast\",\"lake rukwa\",\"majengo\",\"Other\",\"songambele\",\"miembeni\",\"sokoni\",\"madukani\",\"missing\",\"shuleni\",\"kibaoni\",\"m\",\"mbuyuni\",\"msikitini\",\"kati\",\"mapinduzi\",\"mjimwema\",\"mtakuja\",\"kanisani\",\"mlimani\",\"muungano\",\"mjini\",\"1\",\"tabora\",\"iringa\",\"dodoma\",\"kilimanjaro\",\"pwani\",\"shinyanga\",\"kagera\",\"tanga\",\"arusha\",\"mwanza\",\"ruvuma\",\"mtwara\",\"kigoma\",\"Other\",\"morogoro\",\"mbeya\",\"mara\",\"lindi\",\"singida\",\"rukwa\",\"manyara\",\"Other\",\"njombe\",\"meru\",\"magu\",\"arusha rural\",\"kasulu\",\"kilosa\",\"kibondo\",\"rungwe\",\"kahama\",\"same\",\"kigoma rural\",\"moshi rural\",\"maswa\",\"mbozi\",\"singida rural\",\"bariadi\",\"kilombero\",\"bagamoyo\",\"kyela\",\"karagwe\",\"Other\",\"vikindu\",\"chanika\",\"kitunda\",\"maji ya chai\",\"mishamo\",\"chalinze\",\"igosi\",\"usuka\",\"imalinyi\",\"nduruma\",\"siha kati\",\"zinga/ikerege\",\"ngarenanyuki\",\"mdandu\",\"mtwango\",\"itete\",\"msindo\",\"maramba\",\"magomeni\",\"matola\",\"geodata consultants ltd\",\"vwc\",\"missing\",\"water board\",\"private operator\",\"wua\",\"water authority\",\"wug\",\"other\",\"company\",\"parastatal\",\"swc\",\"trust\",\"none\",\"missing\",\"Other\",\"government\",\"m\",\"handeni trunk main(h\",\"uroki-bomang'ombe water sup\",\"none\",\"borehole\",\"wanging'ombe supply scheme\",\"danida\",\"chalinze wate\",\"wanging'ombe water supply s\",\"k\",\"ngana water supplied scheme\",\"kijiji\",\"machumba estate pipe line\",\"i\",\"bagamoyo wate\",\"kirua kahe gravity water supply trust\",\"n\",\"makwale water supplied sche\",\"afridev\",\"other - rope pump\",\"mono\",\"gravity\",\"nira/tanira\",\"submersible\",\"other\",\"swn 80\",\"windmill\",\"india mark ii\",\"ksb\",\"cemo\",\"india mark iii\",\"other - swn 81\",\"climax\",\"other - play pump\",\"walimi\",\"other - mkulima/shinyanga\",\"afridev\",\"rope pump\",\"mono\",\"gravity\",\"nira/tanira\",\"submersible\",\"other\",\"swn 80\",\"wind-powered\",\"india mark ii\",\"other motorpump\",\"india mark iii\",\"other handpump\",\"handpump\",\"rope pump\",\"motorpump\",\"gravity\",\"submersible\",\"other\",\"wind-powered\",\"vwc\",\"water board\",\"private operator\",\"wua\",\"wug\",\"company\",\"water authority\",\"other\",\"unknown\",\"parastatal\",\"trust\",\"other - school\",\"user-group\",\"commercial\",\"other\",\"unknown\",\"parastatal\",\"unknown\",\"never pay\",\"pay per bucket\",\"pay when scheme fails\",\"pay monthly\",\"pay annually\",\"other\",\"unknown\",\"never pay\",\"per bucket\",\"on failure\",\"monthly\",\"annually\",\"other\",\"milky\",\"soft\",\"salty\",\"salty abandoned\",\"coloured\",\"unknown\",\"fluoride\",\"fluoride abandoned\",\"milky\",\"good\",\"salty\",\"colored\",\"unknown\",\"fluoride\",\"enough\",\"insufficient\",\"dry\",\"seasonal\",\"unknown\",\"enough\",\"insufficient\",\"dry\",\"seasonal\",\"unknown\",\"shallow well\",\"machine dbh\",\"spring\",\"rainwater harvesting\",\"river\",\"lake\",\"other\",\"dam\",\"hand dtw\",\"unknown\",\"shallow well\",\"borehole\",\"spring\",\"rainwater harvesting\",\"river/lake\",\"other\",\"dam\",\"groundwater\",\"surface\",\"unknown\",\"hand pump\",\"communal standpipe multiple\",\"communal standpipe\",\"other\",\"improved spring\",\"cattle trough\",\"dam\",\"hand pump\",\"communal standpipe\",\"other\",\"improved spring\",\"cattle trough\",\"dam\",\"train\",\"test\"],[1136,33665,765,11299,739,1701,2782,5484,1623,3907,1562,1037,1324,1703,1012,949,728,735,1034,1065,523,29225,765,2367,653,1354,21756,538,5512,1135,1306,867,1498,1768,690,887,786,1181,933,506,62710,4442,323,103,2183,113,328,178,1034,260,647,390,113,247,145,321,105,128,130,159,191,8052,9987,7577,11143,9642,12871,6332,5587,3059,631,68575,194,168,294,629,470,646,143,243,210,164,467,126,129,322,146,190,215,131,157,2466,6599,2779,5494,3331,6293,4174,3186,4111,3897,3306,2144,3533,1020,5038,5758,2451,1920,2536,2242,1972,47887,3128,1244,1049,1521,1322,1368,1101,1381,1058,1106,1015,1566,1024,1286,1202,1485,1207,1263,1070,967,69556,199,221,260,227,251,238,386,222,318,261,297,185,212,292,189,179,243,167,170,177,74250,45917,4846,3462,1326,3551,3975,6496,996,1341,2124,123,92,1,35258,31515,395,490,204,266,828,704,287,483,502,323,861,335,205,225,281,384,237,258,209,2208,572,3628,33263,10205,5982,8102,4588,152,3029,1790,108,135,284,41,101,60,2,2208,572,3628,33263,10205,7772,8102,4588,152,3029,149,135,447,20612,572,3777,33263,7772,8102,152,50624,3688,2504,3118,8108,859,1123,1083,683,2229,105,126,65538,4591,1209,683,2229,10149,31712,11266,4842,10397,4570,1314,10149,31712,11266,4842,10397,4570,1314,1005,63505,6082,423,623,2345,244,23,1005,63505,6505,623,2345,267,41522,18896,7782,5075,975,41522,18896,7782,5075,975,21140,13822,21216,2863,11964,950,261,840,1108,86,21140,14930,21216,2863,12914,347,840,57286,16617,347,21884,7611,35628,8010,959,150,8,21884,43239,8010,959,150,8,59400,14850],[2,45,1,15,1,2,4,7,2,5,2,1,2,2,1,1,1,1,1,1,1,39,1,3,1,2,29,1,7,2,2,1,2,2,1,1,1,2,1,1,84,6,0,0,3,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,11,13,10,15,13,17,9,8,4,1,92,0,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,3,9,4,7,4,8,6,4,6,5,4,3,5,1,7,8,3,3,3,3,3,64,4,2,1,2,2,2,1,2,1,1,1,2,1,2,2,2,2,2,1,1,94,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,100,62,7,5,2,5,5,9,1,2,3,0,0,0,47,42,1,1,0,0,1,1,0,1,1,0,1,0,0,0,0,1,0,0,0,3,1,5,45,14,8,11,6,0,4,2,0,0,0,0,0,0,0,3,1,5,45,14,10,11,6,0,4,0,0,1,28,1,5,45,10,11,0,68,5,3,4,11,1,2,1,1,3,0,0,88,6,2,1,3,14,43,15,7,14,6,2,14,43,15,7,14,6,2,1,86,8,1,1,3,0,0,1,86,9,1,3,0,56,25,10,7,1,56,25,10,7,1,28,19,29,4,16,1,0,1,1,0,28,20,29,4,17,0,1,77,22,0,29,10,48,11,1,0,0,29,58,11,1,0,0,80,20]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>variable<\\/th>\\n      <th>value<\\/th>\\n      <th>freq<\\/th>\\n      <th>perc<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[3,4]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfactor_cols[set == \"train\", .N, by = .(funder,status_group)] %>%\n    .[, perc := round(N/sum(N) * 100, 2), by = .(funder)] %>%\n    \n     ggplot(aes(funder, perc, fill = status_group)) +\n     geom_bar(stat = \"identity\") +\n     # geom_text(aes(funder, perc, label = paste0(perc, \"%\"),\n     #               vjust = .05, hjust = .5),\n     #           size = 3, position = position_stack(vjust = 0.5))+\n     theme_hc()+\n    labs(title = \"Percentage loans_\")+\n     scale_fill_economist(name = \"\")+\n    theme(legend.position = \"bottom\",\n          axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))\n```\n\n::: {.cell-output-display}\n![](water_pumps_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfactor_cols[set == \"train\", .N, by = .(water_quality,status_group)] %>%\n    .[, perc := round(N/sum(N) * 100, 2), by = .(water_quality)] %>%\n    \n     ggplot(aes(water_quality, perc, fill = status_group)) +\n     geom_bar(stat = \"identity\") +\n     geom_text(aes(water_quality, perc, label = paste(perc, \"%\"),\n                   vjust = .05, hjust = .5),\n               size = 3, position = position_stack(vjust = 0.5))+\n     theme_hc()+\n    labs(title = \"\")+\n     scale_fill_economist(name = \"\")+\n    theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](water_pumps_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfactor_cols[set == \"train\", .N, by = .(installer,status_group)] %>%\n    .[, perc := round(N/sum(N) * 100, 2), by = .(installer)] %>%\n    \n     ggplot(aes(installer, perc, fill = status_group)) +\n     geom_bar(stat = \"identity\") +\n     theme_hc()+\n    labs(title = \"\")+\n     scale_fill_economist(name = \"\")+\n    theme(legend.position = \"bottom\",\n          axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))\n```\n\n::: {.cell-output-display}\n![](water_pumps_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npump_data[construction_year == 0, construction_year := NA]\nsummary(pump_data$construction_year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n   1960    1988    2000    1997    2008    2013   25969 \n```\n:::\n\n```{.r .cell-code}\npump_data[, construction_year2  := cut(construction_year, breaks = c(1959, 1988, 2000, 2008, 2013))]\npump_data[, construction_year2 := fct_explicit_na(construction_year2, na_level = \"unknown\")]\nsummary(pump_data$construction_year2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(1959,1988] (1988,2000] (2000,2008] (2008,2013]     unknown \n      12650       12585       13389        9657       25969 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# train_set <- pump_data[set == \"train\",\n#                        .(status_group, go_funded, water_quality,\n#                          quantity,  construction_year2,\n#                          management_group, go_installer,\n#                          waterpoint_type_group1, longitude, latitude, basin,\n#                          management_group1)]\n\n#is there biase in recording\ndel_cols <- c( \"recorded_by\")\ndata_clean <- cbind(pump_data[, .(construction_year2, latitude, longitude)], factor_cols)\n\ntrain_set <- data_clean[set == \"train\"]\ntrain_set[, set := NULL]\nchar_cols2 <- char_cols[!char_cols %in% c(\"status_group\" )]\ntrain_set_dmmy <- dummies::dummy.data.frame(train_set, names = char_cols2) %>% setDT()\ntrain_set_dmmy[, status_group := factor(status_group,\n                                   levels = c(\"functional\", \"functional needs repair\", \"non functional\"),\n                                   labels  = c(\"functional\", \"functional_needs_repair\", \"non_functional\"))]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(100)\n#train_set <- train_set[status_group %in% c(\"functional\", \"functional_needs_repair\") ]\ntrain_ind <- sample(1:nrow(train_set_dmmy), round(0.7 * nrow(train_set)))\ntrain_set_dmmy[, status_group := factor(status_group)]\n\ntrain_set1 <- train_set_dmmy[train_ind,]\nset.seed(100)\ncv_fold <- createFolds(train_set1$status_group, k = 3)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(caretEnsemble)\n\ntrain_ctrl <- trainControl(method = \"cv\",\n                        number = 3,\n                        summaryFunction = multiClassSummary,\n                        classProbs = TRUE,\n                        allowParallel=T,\n                        index = cv_fold,\n                        verboseIter = TRUE,\n                        returnResamp = \"all\", \n                        savePredictions = \"final\", \n                        search = \"grid\")\n\n\nxgb_grid <-  expand.grid(nrounds = c(50,100),\n                        eta = 0.06,\n                        max_depth =c(10, 50),\n                        gamma = 6,\n                        colsample_bytree = 0.8,\n                        min_child_weight =0.8,\n                        subsample =  .8)\n\n\n\nranger_grid <- expand.grid(splitrule = \"extratrees\",\n                        mtry = c(20, 50, 100),\n                        min.node.size = 1)\n\n\nglmnet_grid <- expand.grid(alpha = c(0, 1),\n                           lambda = seq(0.0001, 1, length = 3))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(100)\n\nlibrary(tictoc)\n\ntic()\n\nmodel_list <- caretList(\n   status_group~.,\n    data=train_set1,\n    trControl=train_ctrl,\n    tuneList = list(caretModelSpec(method=\"xgbTree\", tuneGrid= xgb_grid),\n                    caretModelSpec(method=\"ranger\", tuneGrid= ranger_grid),\n                    caretModelSpec(method=\"glmnet\", tuneGrid= glmnet_grid)\n                    \n                    )\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n+ Fold1: eta=0.06, max_depth=10, gamma=6, colsample_bytree=0.8, min_child_weight=0.8, subsample=0.8, nrounds=100 \n[15:36:29] WARNING: src/c_api/c_api.cc:935: `ntree_limit` is deprecated, use `iteration_range` instead.\n[15:36:29] WARNING: src/c_api/c_api.cc:935: `ntree_limit` is deprecated, use `iteration_range` instead.\n- Fold1: eta=0.06, max_depth=10, gamma=6, colsample_bytree=0.8, min_child_weight=0.8, subsample=0.8, nrounds=100 \n+ Fold1: eta=0.06, max_depth=50, gamma=6, colsample_bytree=0.8, min_child_weight=0.8, subsample=0.8, nrounds=100 \n[15:37:10] WARNING: src/c_api/c_api.cc:935: `ntree_limit` is deprecated, use `iteration_range` instead.\n[15:37:10] WARNING: src/c_api/c_api.cc:935: `ntree_limit` is deprecated, use `iteration_range` instead.\n- Fold1: eta=0.06, max_depth=50, gamma=6, colsample_bytree=0.8, min_child_weight=0.8, subsample=0.8, nrounds=100 \n+ Fold2: eta=0.06, max_depth=10, gamma=6, colsample_bytree=0.8, min_child_weight=0.8, subsample=0.8, nrounds=100 \n[15:37:28] WARNING: src/c_api/c_api.cc:935: `ntree_limit` is deprecated, use `iteration_range` instead.\n[15:37:28] WARNING: src/c_api/c_api.cc:935: `ntree_limit` is deprecated, use `iteration_range` instead.\n- Fold2: eta=0.06, max_depth=10, gamma=6, colsample_bytree=0.8, min_child_weight=0.8, subsample=0.8, nrounds=100 \n+ Fold2: eta=0.06, max_depth=50, gamma=6, colsample_bytree=0.8, min_child_weight=0.8, subsample=0.8, nrounds=100 \n[15:38:19] WARNING: src/c_api/c_api.cc:935: `ntree_limit` is deprecated, use `iteration_range` instead.\n[15:38:19] WARNING: src/c_api/c_api.cc:935: `ntree_limit` is deprecated, use `iteration_range` instead.\n- Fold2: eta=0.06, max_depth=50, gamma=6, colsample_bytree=0.8, min_child_weight=0.8, subsample=0.8, nrounds=100 \n+ Fold3: eta=0.06, max_depth=10, gamma=6, colsample_bytree=0.8, min_child_weight=0.8, subsample=0.8, nrounds=100 \n[15:38:34] WARNING: src/c_api/c_api.cc:935: `ntree_limit` is deprecated, use `iteration_range` instead.\n[15:38:34] WARNING: src/c_api/c_api.cc:935: `ntree_limit` is deprecated, use `iteration_range` instead.\n- Fold3: eta=0.06, max_depth=10, gamma=6, colsample_bytree=0.8, min_child_weight=0.8, subsample=0.8, nrounds=100 \n+ Fold3: eta=0.06, max_depth=50, gamma=6, colsample_bytree=0.8, min_child_weight=0.8, subsample=0.8, nrounds=100 \n[15:39:18] WARNING: src/c_api/c_api.cc:935: `ntree_limit` is deprecated, use `iteration_range` instead.\n[15:39:18] WARNING: src/c_api/c_api.cc:935: `ntree_limit` is deprecated, use `iteration_range` instead.\n- Fold3: eta=0.06, max_depth=50, gamma=6, colsample_bytree=0.8, min_child_weight=0.8, subsample=0.8, nrounds=100 \nAggregating results\nSelecting tuning parameters\nFitting nrounds = 100, max_depth = 50, eta = 0.06, gamma = 6, colsample_bytree = 0.8, min_child_weight = 0.8, subsample = 0.8 on full training set\n+ Fold1: splitrule=extratrees, mtry= 20, min.node.size=1 \n- Fold1: splitrule=extratrees, mtry= 20, min.node.size=1 \n+ Fold1: splitrule=extratrees, mtry= 50, min.node.size=1 \n- Fold1: splitrule=extratrees, mtry= 50, min.node.size=1 \n+ Fold1: splitrule=extratrees, mtry=100, min.node.size=1 \nGrowing trees.. Progress: 81%. Estimated remaining time: 7 seconds.\n- Fold1: splitrule=extratrees, mtry=100, min.node.size=1 \n+ Fold2: splitrule=extratrees, mtry= 20, min.node.size=1 \n- Fold2: splitrule=extratrees, mtry= 20, min.node.size=1 \n+ Fold2: splitrule=extratrees, mtry= 50, min.node.size=1 \n- Fold2: splitrule=extratrees, mtry= 50, min.node.size=1 \n+ Fold2: splitrule=extratrees, mtry=100, min.node.size=1 \nGrowing trees.. Progress: 81%. Estimated remaining time: 7 seconds.\n- Fold2: splitrule=extratrees, mtry=100, min.node.size=1 \n+ Fold3: splitrule=extratrees, mtry= 20, min.node.size=1 \n- Fold3: splitrule=extratrees, mtry= 20, min.node.size=1 \n+ Fold3: splitrule=extratrees, mtry= 50, min.node.size=1 \n- Fold3: splitrule=extratrees, mtry= 50, min.node.size=1 \n+ Fold3: splitrule=extratrees, mtry=100, min.node.size=1 \nGrowing trees.. Progress: 81%. Estimated remaining time: 7 seconds.\n- Fold3: splitrule=extratrees, mtry=100, min.node.size=1 \nAggregating results\nSelecting tuning parameters\nFitting mtry = 20, splitrule = extratrees, min.node.size = 1 on full training set\n+ Fold1: alpha=0, lambda=1 \n- Fold1: alpha=0, lambda=1 \n+ Fold1: alpha=1, lambda=1 \n- Fold1: alpha=1, lambda=1 \n+ Fold2: alpha=0, lambda=1 \n- Fold2: alpha=0, lambda=1 \n+ Fold2: alpha=1, lambda=1 \n- Fold2: alpha=1, lambda=1 \n+ Fold3: alpha=0, lambda=1 \n- Fold3: alpha=0, lambda=1 \n+ Fold3: alpha=1, lambda=1 \n- Fold3: alpha=1, lambda=1 \nAggregating results\nSelecting tuning parameters\nFitting alpha = 0, lambda = 1e-04 on full training set\n```\n:::\n\n```{.r .cell-code}\ntoc()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n754.052 sec elapsed\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_list\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$xgbTree\neXtreme Gradient Boosting \n\n41580 samples\n  317 predictor\n    3 classes: 'functional', 'functional_needs_repair', 'non_functional' \n\nNo pre-processing\nResampling: Cross-Validated (3 fold) \nSummary of sample sizes: 13860, 13860, 13860 \nResampling results across tuning parameters:\n\n  max_depth  nrounds  logLoss    AUC        prAUC      Accuracy   Kappa    \n  10          50      0.6187243  0.8459881  0.6802115  0.7547860  0.5157636\n  10         100      0.5926387  0.8524641  0.6887911  0.7603415  0.5298999\n  50          50      0.6069728  0.8524588  0.6887281  0.7629149  0.5350648\n  50         100      0.5779731  0.8594204  0.6984094  0.7674723  0.5473892\n  Mean_F1    Mean_Sensitivity  Mean_Specificity  Mean_Pos_Pred_Value\n  0.5711633  0.5540417         0.8301047         0.7595898          \n  0.5830710  0.5640156         0.8356069         0.7594603          \n  0.5860981  0.5666008         0.8372974         0.7603948          \n  0.5977618  0.5766923         0.8423961         0.7548314          \n  Mean_Neg_Pred_Value  Mean_Precision  Mean_Recall  Mean_Detection_Rate\n  0.8722563            0.7595898       0.5540417    0.2515953          \n  0.8716314            0.7594603       0.5640156    0.2534472          \n  0.8736187            0.7603948       0.5666008    0.2543050          \n  0.8726430            0.7548314       0.5766923    0.2558241          \n  Mean_Balanced_Accuracy\n  0.6920732             \n  0.6998113             \n  0.7019491             \n  0.7095442             \n\nTuning parameter 'eta' was held constant at a value of 0.06\nTuning\n\nTuning parameter 'min_child_weight' was held constant at a value of 0.8\n\nTuning parameter 'subsample' was held constant at a value of 0.8\nAccuracy was used to select the optimal model using the largest value.\nThe final values used for the model were nrounds = 100, max_depth = 50, eta\n = 0.06, gamma = 6, colsample_bytree = 0.8, min_child_weight = 0.8\n and subsample = 0.8.\n\n$ranger\nRandom Forest \n\n41580 samples\n  317 predictor\n    3 classes: 'functional', 'functional_needs_repair', 'non_functional' \n\nNo pre-processing\nResampling: Cross-Validated (3 fold) \nSummary of sample sizes: 13860, 13860, 13860 \nResampling results across tuning parameters:\n\n  mtry  logLoss    AUC        prAUC      Accuracy   Kappa      Mean_F1  \n   20   0.5492160  0.8714603  0.7145098  0.7794733  0.5791659  0.6402572\n   50   0.6023253  0.8673458  0.6758671  0.7755652  0.5770019  0.6462120\n  100   0.7126941  0.8630358  0.6359068  0.7730159  0.5748031  0.6475980\n  Mean_Sensitivity  Mean_Specificity  Mean_Pos_Pred_Value  Mean_Neg_Pred_Value\n  0.6144159         0.8551479         0.7242051            0.8751245          \n  0.6242823         0.8562681         0.6974150            0.8701457          \n  0.6282465         0.8564829         0.6870313            0.8676719          \n  Mean_Precision  Mean_Recall  Mean_Detection_Rate  Mean_Balanced_Accuracy\n  0.7242051       0.6144159    0.2598244            0.7347819             \n  0.6974150       0.6242823    0.2585217            0.7402752             \n  0.6870313       0.6282465    0.2576720            0.7423647             \n\nTuning parameter 'splitrule' was held constant at a value of extratrees\n\nTuning parameter 'min.node.size' was held constant at a value of 1\nAccuracy was used to select the optimal model using the largest value.\nThe final values used for the model were mtry = 20, splitrule = extratrees\n and min.node.size = 1.\n\n$glmnet\nglmnet \n\n41580 samples\n  317 predictor\n    3 classes: 'functional', 'functional_needs_repair', 'non_functional' \n\nNo pre-processing\nResampling: Cross-Validated (3 fold) \nSummary of sample sizes: 13860, 13860, 13860 \nResampling results across tuning parameters:\n\n  alpha  lambda   logLoss    AUC        prAUC      Accuracy   Kappa    \n  0      0.00010  0.6218298  0.8319479  0.6497870  0.7439514  0.5036845\n  0      0.50005  0.6746615  0.8169808  0.6330926  0.7311568  0.4643535\n  0      1.00000  0.7068795  0.8096260  0.6250271  0.7228114  0.4433703\n  1      0.00010  0.6251197  0.8319851  0.6495486  0.7437350  0.5066840\n  1      0.50005  0.8893577  0.5000000  0.0000000  0.5424242  0.0000000\n  1      1.00000  0.8893577  0.5000000  0.0000000  0.5424242  0.0000000\n  Mean_F1    Mean_Sensitivity  Mean_Specificity  Mean_Pos_Pred_Value\n  0.5646638  0.5517857         0.8294169         0.6773631          \n        NaN  0.5068225         0.8139668               NaN          \n        NaN  0.4978057         0.8061242               NaN          \n  0.5783964  0.5619689         0.8310915         0.6650360          \n        NaN  0.3333333         0.6666667               NaN          \n        NaN  0.3333333         0.6666667               NaN          \n  Mean_Neg_Pred_Value  Mean_Precision  Mean_Recall  Mean_Detection_Rate\n  0.8538487            0.6773631       0.5517857    0.2479838          \n  0.8556091                  NaN       0.5068225    0.2437189          \n  0.8557185                  NaN       0.4978057    0.2409371          \n  0.8526489            0.6650360       0.5619689    0.2479117          \n        NaN                  NaN       0.3333333    0.1808081          \n        NaN                  NaN       0.3333333    0.1808081          \n  Mean_Balanced_Accuracy\n  0.6906013             \n  0.6603946             \n  0.6519649             \n  0.6965302             \n  0.5000000             \n  0.5000000             \n\nAccuracy was used to select the optimal model using the largest value.\nThe final values used for the model were alpha = 0 and lambda = 1e-04.\n\nattr(,\"class\")\n[1] \"caretList\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_own <- train_set_dmmy[-train_ind]\n\n\naccuracy <- c()\nfor (i in 1:length(model_list)) {\n    \n    rf <- model_list[[i]]\n    \n    pred <- predict(rf,  newdata = test_own)\n    \n    \n   #auc[i] <-  caret::(pred, test_own$status_group)\n   accuracy[i] <-  round(Metrics::accuracy(pred, test_own$status_group) * 100, 2)\n   \n   \n    \n}\n\n\npred_df <- data.frame(models = names(model_list), accuracy)\n\nDT::datatable(pred_df)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-2fe6283e3226b73f85dd\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-2fe6283e3226b73f85dd\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\"],[\"xgbTree\",\"ranger\",\"glmnet\"],[79,79.49,74.4]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>models<\\/th>\\n      <th>accuracy<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":2},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresamples_models <- resamples(model_list)\n\ndotplot(resamples_models, metric = \"AUC\")\n```\n\n::: {.cell-output-display}\n![](water_pumps_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Alternatively, you can put in dense matrix, i.e. basic R-matrix\n# library(lightgbm)\n# \n# train_x <- as.matrix(train_set1[, !status_group])\n# train_y <- train_set1$status_group\n# \n# \n# params = list('task'= 'train',\n#     'boosting_type'= 'gbdt',\n#     'objective'= 'multiclass',\n#     'num_class'=3,\n#     'metric'= 'multi_logloss',\n#     'learning_rate'= 0.002296,\n#     'max_depth'= 7,\n#     'num_leaves'= 17,\n#     'feature_fraction'= 0.4,\n#     'bagging_fraction'= 0.6,\n#     'bagging_freq'= 17)\n# \n# train_lgb = lgb.Dataset(data = train_x , label = train_y, params = params)\n# \n# print(\"Training lightgbm with Matrix\")\n# \n# bst <- lightgbm(\n#     data = train_lgb\n#     , num_leaves = 4L\n#     , learning_rate = 1.0\n#     , nrounds = 2L\n#     , objective = \"multiclass\"\n# )\n```\n:::\n",
    "supporting": [
      "water_pumps_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.1/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/datatables-binding-0.27/datatables.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/dt-core-1.12.1/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/dt-core-1.12.1/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-core-1.12.1/js/jquery.dataTables.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}