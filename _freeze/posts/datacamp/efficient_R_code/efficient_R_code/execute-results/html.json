{
  "hash": "752821c210a70dc5d06a9470270d6fd1",
  "result": {
    "markdown": "---\ntitle: \"Writing Efficient R Code\"\nauthor: \"Mburu\"\ndate: \"8/13/2021\"\noutput: \n    github_document: default\n---\n\n\n\n\n## R version\n\nOne of the relatively easy optimizations available is to use an up-to-date version of R. In general, R is very conservative, so upgrading doesn't break existing code. However, a new version will often provide free speed boosts for key functions.\n\nThe version command returns a list that contains (among other things) the major and minor version of R currently being used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Print the R version details using version\nversion\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               _                                          \nplatform       x86_64-pc-linux-gnu                        \narch           x86_64                                     \nos             linux-gnu                                  \nsystem         x86_64, linux-gnu                          \nstatus         Patched                                    \nmajor          4                                          \nminor          2.2                                        \nyear           2022                                       \nmonth          11                                         \nday            10                                         \nsvn rev        83330                                      \nlanguage       R                                          \nversion.string R version 4.2.2 Patched (2022-11-10 r83330)\nnickname       Innocent and Trusting                      \n```\n:::\n\n```{.r .cell-code}\n# Assign the variable major to the major component\nmajor <- version$major\n\n# Assign the variable minor to the minor component\nminor <- version$minor\n```\n:::\n\n\n## Comparing read times of CSV and RDS files\n\nOne of the most common tasks we perform is reading in data from CSV files. However, for large CSV files this can be slow. One neat trick is to read in the data and save as an R binary file (rds) using saveRDS(). To read in the rds file, we use readRDS().\n\nNote: Since rds is R's native format for storing single objects, you have not introduced any third-party dependencies that may change in the future.\n\nTo benchmark the two approaches, you can use system.time(). This function returns the time taken to evaluate any R expression. For example, to time how long it takes to calculate the square root of the numbers from one to ten million, you would write the following:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# How long does it take to read movies from CSV?\nsystem.time(read.csv(\"movies.csv\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   user  system elapsed \n  0.170   0.008   0.178 \n```\n:::\n\n```{.r .cell-code}\n# How long does it take to read movies from RDS?\nsystem.time(readRDS(\"movies.rds\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   user  system elapsed \n  0.036   0.000   0.036 \n```\n:::\n:::\n\n\n## Elapsed time\n\nUsing system.time() is convenient, but it does have its drawbacks when comparing multiple function calls. The microbenchmark package solves this problem with the microbenchmark() function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the microbenchmark package\nlibrary(microbenchmark)\n\n# Compare the two functions\ncompare <- microbenchmark(read.csv(\"movies.csv\"), \n                          readRDS(\"movies.rds\"), \n                          times = 100)\n\n# Print compare\ncompare\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nUnit: milliseconds\n                   expr       min        lq     mean   median        uq\n read.csv(\"movies.csv\") 136.45227 145.09715 152.5399 148.9859 154.37933\n  readRDS(\"movies.rds\")  33.11348  35.08033  38.2428  36.6136  38.60072\n       max neval\n 192.44795   100\n  74.85767   100\n```\n:::\n:::\n\n\nMy hardware For many problems your time is the expensive part. If having a faster computer makes you more productive, it can be cost effective to buy one. However, before you splash out on new toys for yourself, your boss/partner may want to see some numbers to justify the expense. Measuring the performance of your computer is called benchmarking, and you can do that with the benchmarkme package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the benchmarkme package\nlibrary(benchmarkme)\n\n# Assign the variable ram to the amount of RAM on this machine\nram <- get_ram()\nram\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n16.5 GB\n```\n:::\n\n```{.r .cell-code}\n# Assign the variable cpu to the cpu specs\ncpu <- get_cpu()\ncpu\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$vendor_id\n[1] \"GenuineIntel\"\n\n$model_name\n[1] \"11th Gen Intel(R) Core(TM) i7-11370H @ 3.30GHz\"\n\n$no_of_cores\n[1] 8\n```\n:::\n:::\n\n\n## Benchmark DataCamp's machine\n\nThe benchmarkme package allows you to run a set of standardized benchmarks and compare your results to other users. One set of benchmarks tests is reading and writing speeds.\n\nThe function call\n\nres = benchmark_io(runs = 1, size = 5) records the length of time it takes to read and write a 5MB file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Run the io benchmark\nres <- benchmark_io(runs = 1, size = 50)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nPreparing read/write io\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n# IO benchmarks (2 tests) for size 50 MB:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\t Writing a csv with 6250000 values: 5.14 (sec).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\t Reading a csv with 6250000 values: 1.77 (sec).\n```\n:::\n\n```{.r .cell-code}\n# Plot the results\nplot(res)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nYou are ranked 9 out of 119 machines.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nPress return to get next plot \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nYou are ranked 5 out of 119 machines.\n```\n:::\n\n::: {.cell-output-display}\n![](efficient_R_code_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](efficient_R_code_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n\n\n## Benchmark r operations\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Run each benchmark 3 times\nres <- benchmark_std(runs = 10)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n# Programming benchmarks (5 tests):\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\t3,500,000 Fibonacci numbers calculation (vector calc): 0.201 (sec).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\tGrand common divisors of 1,000,000 pairs (recursion): 0.467 (sec).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\tCreation of a 3,500 x 3,500 Hilbert matrix (matrix calc): 0.287 (sec).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\tCreation of a 3,000 x 3,000 Toeplitz matrix (loops): 1.18 (sec).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\tEscoufier's method on a 60 x 60 matrix (mixed): 0.636 (sec).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n# Matrix calculation benchmarks (5 tests):\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\tCreation, transp., deformation of a 5,000 x 5,000 matrix: 0.316 (sec).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\t2,500 x 2,500 normal distributed random matrix^1,000: 0.163 (sec).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\tSorting of 7,000,000 random values: 0.644 (sec).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\t2,500 x 2,500 cross-product matrix (b = a' * a): 1.35 (sec).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\tLinear regr. over a 5,000 x 500 matrix (c = a \\ b'): 0.137 (sec).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n# Matrix function benchmarks (5 tests):\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\tCholesky decomposition of a 3,000 x 3,000 matrix: 0.755 (sec).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\tDeterminant of a 2,500 x 2,500 random matrix: 0.86 (sec).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\tEigenvalues of a 640 x 640 random matrix: 0.386 (sec).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\tFFT over 2,500,000 random values: 0.216 (sec).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\tInverse of a 1,600 x 1,600 random matrix: 0.689 (sec).\n```\n:::\n\n```{.r .cell-code}\nplot(res)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nYou are ranked 13 out of 749 machines.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nPress return to get next plot \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nYou are ranked 42 out of 747 machines.\n```\n:::\n\n::: {.cell-output-display}\n![](efficient_R_code_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nPress return to get next plot \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nYou are ranked 48 out of 747 machines.\n```\n:::\n\n::: {.cell-output-display}\n![](efficient_R_code_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](efficient_R_code_files/figure-html/unnamed-chunk-6-3.png){width=672}\n:::\n:::\n\n\n## Timings - growing a vector\n\nGrowing a vector is one of the deadly sins in R; you should always avoid it.\n\nThe growing() function defined below generates n random standard normal numbers, but grows the size of the vector each time an element is added!\n\nNote: Standard normal numbers are numbers drawn from a normal distribution with mean 0 and standard deviation 1.\n\nn \\<- 30000 \\# Slow code growing \\<- function(n) { x \\<- NULL for(i in 1:n) x \\<- c(x, rnorm(1)) x }\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrowing <- function(n) {\n    x = NULL\n    for(i in 1:n) \n        x = c(x, rnorm(1))\n    x\n}\n\n# Use <- with system.time() to store the result as res_grow\nsystem.time(res_grow <- growing(30000))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   user  system elapsed \n  0.882   0.000   0.882 \n```\n:::\n:::\n\n\nTimings - pre-allocation In the previous exercise, growing the vector took around 2 seconds. How long does it take when we pre-allocate the vector? The pre_allocate() function is defined below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 30000\n# Fast code\npre_allocate <- function(n) {\n    x <- numeric(n) # Pre-allocate\n    for(i in 1:n) \n        x[i] <- rnorm(1)\n    x\n}\n\n\n# Use <- with system.time() to store the result as res_allocate\nn <- 30000\nsystem.time(res_allocate <- pre_allocate(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   user  system elapsed \n  0.039   0.000   0.040 \n```\n:::\n:::\n\n\n## Vectorized code: multiplication\n\nThe following piece of code is written like traditional C or Fortran code. Instead of using the vectorized version of multiplication, it uses a for loop.\n\nYour job is to make this code more \"R-like\" by vectorizing it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- rnorm(10)\nx2 <- numeric(length(x))\nfor(i in 1:10)\n    x2[i] <- x[i] * x[i]\n# Store your answer as x2_imp\nx2_imp <- x*x\n```\n:::\n\n\n## Vectorized code: calculating a log-sum\n\nA common operation in statistics is to calculate the sum of log probabilities. The following code calculates the log-sum (the sum of the logs).\n\n# x is a vector of probabilities\n\ntotal \\<- 0 for(i in seq_along(x)) total \\<- total + log(x\\[i\\]) However this piece of code could be significantly improved using vectorized code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Initial code\nn <- 100\ntotal <- 0\nx <- runif(n)\nfor(i in 1:n) \n    total <- total + log(x[i])\n\n# Rewrite in a single line. Store the result in log_sum\nlog_sum <- sum(log(x))\n```\n:::\n\n\n## Data frames and matrices - column selection\n\nAll values in a matrix must have the same data type, which has efficiency implications when selecting rows and columns.\n\nSuppose we have two objects, mat (a matrix) and df (a data frame).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Which is faster, mat[, 1] or df[, 1]? \nmicrobenchmark(mat[, 1], df[, 1])\n```\n:::\n\n\n## Row timings\n\nSimilar to the previous example, the objects mat and df are a matrix and a data frame, respectively. Using microbenchmark(), how long does it take to select the first row from each of these objects?\n\nTo make the comparison fair, just use mat\\[1, \\] and df\\[1, \\].\n\n-   Interesting! Accessing a row of a data frame is much slower than accessing that of a matrix, more so than when accessing a column from each data type. This is because the values of a column of a data frame must be the same data type, whereas that of a row doesn't have to be. Do you see the pattern here?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Which is faster, mat[, 1] or df[, 1]? \nmicrobenchmark(mat[1, ], df[1, ])\n```\n:::\n\n\n## Profvis in action\n\nExamine the code on the right that performs a standard data analysis. It loads and selects data, plots the data of interest, and adds in a regression line.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the data set\ndata(movies, package = \"ggplot2movies\") \n\n# Load the profvis package\nlibrary(profvis)\n\n# Profile the following code with the profvis function\nprofvis({\n  # Load and select data\n  comedies <- movies[movies$Comedy == 1, ]\n\n  # Plot data of interest\n  plot(comedies$year, comedies$rating)\n\n  # Loess regression line\n  model <- loess(rating ~ year, data = comedies)\n  j <- order(comedies$year)\n  \n  # Add fitted line to the plot\n  lines(comedies$year[j], model$fitted[j], col = \"red\")\n})    ## Remember the closing brackets!\n```\n\n::: {.cell-output-display}\n![](efficient_R_code_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"profvis html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-bc25f6d32d9aff2065af\" style=\"width:100%;height:600px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-bc25f6d32d9aff2065af\">{\"x\":{\"message\":{\"prof\":{\"time\":[1,1,2,2,3,3,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,9,10,10,10,11,11,11,12,12,12,13,13,13,14,14,14,15,15,15,16,16,16,17,17,17,18,18,18,19,19,19,20,20,20,21,21,21,22,22,22,23,23,23,24,24,24,25,25,25,26,26,26,27,27,27,28,28,28,29,29,29,30,30,30,31,31,31,32,32,32,33,33,33,34,34,34,35,35,35,36,36,36,37,37,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,169,169,170,170,171,171,172,172,173,173,174,174,175,175,176,176,177,177,178,178,179,179,180,180,181,181,182,182,183,183,184,184,185,185,186,186,187,187,188,188,189,189,190,190,191,191,192,192,193,193,194,194,195,195,196,196,197,197,198,198,199,199,200,200,201,201,202,202,203,203,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,221,221,222,222,223,223,224,224,225,225,226,226,227,227,228,228,229,229,230,230,231,231,232,232,233,233,234,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,247,248,248,249,249,250,250,251,251,252,252,253,253,254,254,255,255,256,256,257,257,258,258,259,259,260,260,261,261,262,262,263,263,264,264,265,265,266,266,267,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,280,281,281,282,282,283,283,284,284,285,285,286,286,287,287,288,288,289,289,290,290,291,291,292,292,293,293,294,294,295,295,296,296,297,297,298,298,299,299,300,300,301,301,302,302,303,303,304,304,305,305,306,306,307,307,308,308,309,309,310,310,311,311,312,312,313,313,314,314,315,315,316,316,317,317,318,318,319,319,320,320,321,321,322,322,323,323,324,324,325,325,326,326,327,327,328,328,329,329,330,330,331,331,332,332,333,333,334,334,335,335,336,336,337,337,338,338,339,339,340,340,341,341,342,342,343,343,344,344,345,345,346,346],\"depth\":[2,1,2,1,2,1,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,4,3,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1],\"label\":[\"lazyLoadDBfetch\",\".main\",\"lazyLoadDBfetch\",\".main\",\"lazyLoadDBfetch\",\".main\",\"lazyLoadDBfetch\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"plot.xy\",\"plot.default\",\".main\",\"Axis\",\"localAxis\",\"plot.default\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\",\".C\",\".main\"],\"filenum\":[1,null,1,null,1,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"linenum\":[10,null,10,null,10,null,10,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"memalloc\":[37.1516036987305,37.1516036987305,46.8989562988281,46.8989562988281,49.974853515625,49.974853515625,55.5813293457031,55.5813293457031,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9533538818359,59.9538040161133,59.9538040161133,59.9538040161133,59.9538040161133,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125,64.8173828125],\"meminc\":[0,0,9.74735260009766,0,3.07589721679688,0,5.60647583007812,0,4.37202453613281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.00045013427734375,0,0,0,4.86357879638672,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"filename\":[\"<expr>\",null,\"<expr>\",null,\"<expr>\",null,\"<expr>\",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},\"interval\":10,\"files\":[{\"filename\":\"<expr>\",\"content\":\"# Load the data set\\ndata(movies, package = \\\"ggplot2movies\\\") \\n\\n# Load the profvis package\\nlibrary(profvis)\\n\\n# Profile the following code with the profvis function\\nprofvis({\\n  # Load and select data\\n  comedies <- movies[movies$Comedy == 1, ]\\n\\n  # Plot data of interest\\n  plot(comedies$year, comedies$rating)\\n\\n  # Loess regression line\\n  model <- loess(rating ~ year, data = comedies)\\n  j <- order(comedies$year)\\n  \\n  # Add fitted line to the plot\\n  lines(comedies$year[j], model$fitted[j], col = \\\"red\\\")\\n})    ## Remember the closing brackets!\",\"normpath\":\"<expr>\"}],\"prof_output\":\"/tmp/RtmpPH2A2U/file7a2933c45c254.prof\",\"highlight\":{\"output\":[\"^output\\\\$\"],\"gc\":[\"^<GC>$\"],\"stacktrace\":[\"^\\\\.\\\\.stacktraceo(n|ff)\\\\.\\\\.$\"]},\"split\":\"h\"}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n",
    "supporting": [
      "efficient_R_code_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../site_libs/htmlwidgets-1.6.1/htmlwidgets.js\"></script>\n<script src=\"../../../site_libs/jquery-1.12.4/jquery.min.js\"></script>\n<script src=\"../../../site_libs/d3-3.5.6/d3.min.js\"></script>\n<link href=\"../../../site_libs/profvis-0.3.6.9000/profvis.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/profvis-0.3.6.9000/profvis.js\"></script>\n<script src=\"../../../site_libs/profvis-0.3.6.9000/scroll.js\"></script>\n<link href=\"../../../site_libs/highlight-6.2.0/textmate.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/highlight-6.2.0/highlight.js\"></script>\n<script src=\"../../../site_libs/profvis-binding-0.3.7/profvis.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}