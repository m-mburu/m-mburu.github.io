{
  "hash": "69351b55dfa9fe6b54c5fd2c1d0b6dd5",
  "result": {
    "markdown": "---\ntitle: \"Climate Change\"\nauthor: \"Mburu\"\ndate: \"2022-07-31\"\noutput: html_document\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(here)\nlibrary(knitr)\nlibrary(foreach)\nlibrary(ggthemes)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#global_land_temp <- fread(here(\"data/GlobalLandTemperaturesByCity.csv\"))\nload(here(\"data/GlobalLandTemperaturesByCity.rda\"))\nglobal_land_temp <- global_land_temp[!is.na(AverageTemperature)]\nglobal_land_temp[, lat := str_extract(Latitude, \"N|S\")]\n\nglobal_land_temp[, lon := str_extract(Longitude, \"E|W\")]\n\nlat_cols <- c(\"Latitude\", \"Longitude\")\nglobal_land_temp[ ,(lat_cols) := lapply(.SD, gsub, pattern = \"N|W|E|S\", replacement = \"\"), \n                                           .SDcols = lat_cols]\nglobal_land_temp[, Latitude := as.numeric(Latitude)]\nglobal_land_temp[, Latitude := ifelse(lat == \"S\", - Latitude, Latitude)]\nglobal_land_temp[, Longitude := as.numeric(Longitude)]\nglobal_land_temp[, Longitude := ifelse(lon == \"W\", - Longitude, Longitude)]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncities_dates <- global_land_temp[, .(min_date = min(dt), \n                              max_date = max(dt), freq = .N), by  = City][\n                                min_date < \"1904-01-01\" & \n                                  max_date > \"2013-08-01\" & freq > 1400\n                              ]\n\nkenya <- global_land_temp[Country == \"Kenya\"]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkisumu <- global_land_temp[City == \"Kisumu\"]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntowns = unique(kenya$City)\n#towns <- sample(towns, 5)\n#kenya <- global_land_temp[City %in% towns ]\nkenyaTowns = split(kenya, kenya$City)\n\ncities <- foreach(i = 1:length(kenyaTowns)) %do% {\n  this = kenyaTowns[[i]]\n  this = this[!is.na(AverageTemperature) & dt >= \"1900-01-01\"]\n  this[, AverageTemperature := ts(AverageTemperature, start = c(1900, 1), end = c(2013, 8), frequency = 12)]\n  this[, AverageTemperature := stats::filter(AverageTemperature, rep(1, 120)/120, method = \"con\", sides = 2)]\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummaryStats <- list()\n\nfor(i in 1:length(kenyaTowns)){\n  this <- setDT(kenyaTowns[[i]])\n  this <- this %>% group_by(City, dt) %>%\n    summarise(max = max(AverageTemperature, na.rm = T)) %>% arrange(desc(max))\n  summaryStats[[i]] <- this[1:2, ]\n\n}\nrbindlist(summaryStats) %>% kable\n```\n\n::: {.cell-output-display}\n|City    |dt         |    max|\n|:-------|:----------|------:|\n|Eldoret |2005-02-01 | 24.536|\n|Eldoret |1997-03-01 | 24.052|\n|Kisumu  |2005-02-01 | 24.636|\n|Kisumu  |1997-03-01 | 24.301|\n|Mombasa |2003-03-01 | 28.974|\n|Mombasa |1987-03-01 | 28.903|\n|Nairobi |1987-03-01 | 19.446|\n|Nairobi |2005-02-01 | 19.431|\n|Nakuru  |1987-03-01 | 19.446|\n|Nakuru  |2005-02-01 | 19.431|\n|Ruiru   |1987-03-01 | 25.064|\n|Ruiru   |2005-03-01 | 24.554|\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotly)\ntitl = paste(towns, \"simple Moving average surface temperature from 1900 to 2015\")\ny = expression(\"Average temperature (  \"  * degree~C * \" )\")\n#my_plots <-htmltools::tagList()\nmy_plots <- list()\nfor (i in 1:length(cities)) {\n  this = cities[[i]]\n  this[, dt2 := dt]\n  this[, Date := as.character(dt2)]\n  temp_max <- max(this$AverageTemperature, na.rm = T)\n  temp_min <- min(this$AverageTemperature, na.rm = T)\n  mybreaks = seq(temp_min, temp_max, by = .2) %>% round(2)\n  p = ggplot(this, aes(x = dt2, y = AverageTemperature, label = Date))+\n    geom_line(colour = \"blue\")+ theme_hc()+\n  labs(x = \"Year\", y = y, title = titl[i])+\n    scale_y_continuous(breaks = mybreaks)+\n  #ylim(min(this$AverageTemperature)-2, max(this$AverageTemperature)+2)+\n  scale_x_date(date_breaks = \"10 years\", date_labels = \"%Y\")\n  my_plots[[i]] = p # ggplotly(p) %>% as_widget()\n  #p\n}\nmy_plots\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n```\n:::\n\n::: {.cell-output-display}\n![](world_temp_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n[[2]]\n```\n:::\n\n::: {.cell-output-display}\n![](world_temp_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n[[3]]\n```\n:::\n\n::: {.cell-output-display}\n![](world_temp_files/figure-html/unnamed-chunk-7-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n[[4]]\n```\n:::\n\n::: {.cell-output-display}\n![](world_temp_files/figure-html/unnamed-chunk-7-4.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n[[5]]\n```\n:::\n\n::: {.cell-output-display}\n![](world_temp_files/figure-html/unnamed-chunk-7-5.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n[[6]]\n```\n:::\n\n::: {.cell-output-display}\n![](world_temp_files/figure-html/unnamed-chunk-7-6.png){width=672}\n:::\n:::\n",
    "supporting": [
      "world_temp_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}