{
  "hash": "ce243b1ed69b73601f14e80e833cc395",
  "result": {
    "markdown": "---\ntitle: \"Heart Disease Explainable ML\"\nauthor: \"Mburu\"\ndate: \"7/22/2020\"\noutput: html_document\n---\n\n\n\n\n## Heart Disease data set\ncorrelation network plot ml\nIn health research we are not only interested with prediction level but explanability of the fitted algorithm what people in health research call risk factors. We can use  [heart disease data set](https://www.kaggle.com/ronitf/heart-disease-uci) to figure out how we can utilize some of the mc.\n\nI have stolen your idea. For someone working in health research your notebook is a gold mine. In health especially cohort studies, clinical trials people are largely still using generalized linear models because at least from them you can get odds/risk/rate ratios, p values, AIC and so on. I have implemented the same with R(see here). I have also searched for other materials online see here. Thank you.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(caret)\nlibrary(DT)\nlibrary(iml)\nlibrary(patchwork)\nlibrary(gridExtra)\nheart <- fread(\"heart.csv\")\n\nheart %>% head %>%\n    datatable(options = list(scrollX = TRUE))\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-c1f5a4c60e4119501f3b\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-c1f5a4c60e4119501f3b\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\"],[63,37,41,56,57,57],[1,1,0,1,0,1],[3,2,1,1,0,0],[145,130,130,120,120,140],[233,250,204,236,354,192],[1,0,0,0,0,0],[0,1,0,1,1,1],[150,187,172,178,163,148],[0,0,0,0,1,0],[2.3,3.5,1.4,0.8,0.6,0.4],[0,0,2,2,2,1],[0,0,0,0,0,0],[1,2,2,2,2,1],[1,1,1,1,1,1]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>age<\\/th>\\n      <th>sex<\\/th>\\n      <th>cp<\\/th>\\n      <th>trestbps<\\/th>\\n      <th>chol<\\/th>\\n      <th>fbs<\\/th>\\n      <th>restecg<\\/th>\\n      <th>thalach<\\/th>\\n      <th>exang<\\/th>\\n      <th>oldpeak<\\/th>\\n      <th>slope<\\/th>\\n      <th>ca<\\/th>\\n      <th>thal<\\/th>\\n      <th>target<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"scrollX\":true,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\n## Some Cleaning\n\nYou can can check the variable levels from [here](https://archive.ics.uci.edu/ml/datasets/Heart+Disease)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheart[, sex := factor(sex, \n                      levels = 0:1, \n                      labels = c(\"female\", \"male\"))]\n\n\nheart[, cp := factor(cp,\n                     levels = 0:3,\n                     labels = c(\"angina\", \"atypical angina\",\n                                \"non-anginal pain\", \"asymptomatic\") )]\n\nheart[, fbs := factor(fbs, levels = 0:1,\n                      labels = c(\"fasting blood sugar <= 120 mg/dl)\",\n                                 \"fasting blood sugar > 120 mg/dl)\"))]\n\n\nlnls_restg <- c(\"normal\", \n                 \"having ST-T wave abnormality \\n (T wave inversions and/or \\n ST elevation or depression\n                of >0.05 mV)\", \n                 \"showing probable or definite \\n left ventricular hypertrophy \\n by Estes' criteria\")\n \nheart[, restecg := factor(restecg,\n                          levels = 0:2,\n                          labels = lnls_restg)]\n\n\n\nheart[, exang := factor(exang, \n                        levels = 0:1,\n                        labels = c(\"yes\", \"no\"))]\n\n\n \nheart[, slope := factor(slope,\n                         levels = 0:2,\n                         labels = c(\"upsloping\", \"flat\", \"downsloping\"))]\n \nheart[thal == 0, thal := 1 ]\nheart[, thal := factor(thal,\n                        levels =  1:3,\n                        labels = c(\"normal\", \"fixed defect\", \"reversable defect\"))]\n\nheart[, ca := factor(ca)]\n\nheart[, target := factor(target,\n                         levels = 0:1,\n                         labels = c(\"No_heart_disease\", \"Heart_disease\"))]\n```\n:::\n\n\n\n## Visualize categorical variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnms <- names(heart)\ncateg_nms <- nms[sapply(heart, is.factor)]\n\n\ncateg_nms <- categ_nms[categ_nms != \"target\"]\nplots_categ <- list()\nfor (i in categ_nms) {\n    \n   plots_categ[[i]] = heart[, .(freq = .N), by = c(i,\"target\")] %>%\n        .[, perc := round(freq/sum(freq) * 100, 2), by = i] %>%\n        ggplot(aes_string(i, \"perc\", fill = \"target\")) +\n        geom_bar(stat = \"identity\", width = 0.5)+\n       geom_text(aes_string(i, \"perc\", label = \"perc\"),\n                 size = 3 , position =  position_stack(vjust = 0.5))+\n       theme(legend.position = \"bottom\")+\n       scale_fill_brewer(palette  = \"Dark2\")\n\n}\n\ngrid.arrange(grobs = plots_categ, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](heart_disease_files/figure-html/unnamed-chunk-2-1.png){width=1440}\n:::\n:::\n\n\n\n## Visualize numeric variable\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnum_nms <- nms[sapply(heart, is.numeric)]\n\n# zero_one <- function(x){\n#   minx = min(x, na.rm = T)\n#   maxx = max(x, na.rm = T)\n#   \n#   z = (x - minx)/(maxx - minx)\n# }\n# \n# heart[, (num_nms) := lapply(.SD, zero_one), .SDcols = num_nms]\n\nnum_nms <- num_nms[num_nms != \"target\"]\n\nfor (i in num_nms) {\n    \n        p = ggplot(heart, aes_string(\"target\", i)) +\n            geom_boxplot()\n   print(p)\n}\n```\n\n::: {.cell-output-display}\n![](heart_disease_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](heart_disease_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](heart_disease_files/figure-html/unnamed-chunk-3-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](heart_disease_files/figure-html/unnamed-chunk-3-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](heart_disease_files/figure-html/unnamed-chunk-3-5.png){width=672}\n:::\n:::\n\n\n\n## Fit logistic regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglm_heart <- glm(target ~., data = heart,\n                 family = binomial())\n\nlibrary(broom)\n\ntidy(glm_heart) %>% datatable() %>%\n  formatRound(columns = c(\"estimate\", \"std.error\", \"statistic\", \"p.value\"), digits = 4)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-cffc824330b966051252\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-cffc824330b966051252\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\"],[\"(Intercept)\",\"age\",\"sexmale\",\"cpatypical angina\",\"cpnon-anginal pain\",\"cpasymptomatic\",\"trestbps\",\"chol\",\"fbsfasting blood sugar &gt; 120 mg/dl)\",\"restecghaving ST-T wave abnormality \\n (T wave inversions and/or \\n ST elevation or depression\\n                of &gt;0.05 mV)\",\"restecgshowing probable or definite \\n left ventricular hypertrophy \\n by Estes' criteria\",\"thalach\",\"exangno\",\"oldpeak\",\"slopeflat\",\"slopedownsloping\",\"ca1\",\"ca2\",\"ca3\",\"ca4\",\"thalfixed defect\",\"thalreversable defect\"],[2.62531499077775,0.0274034016256638,-1.82852538561126,0.884011893053656,2.00841173190298,2.41320764280291,-0.0254791248652196,-0.00408242118639366,0.341971822155466,0.446959641232024,-0.714065929257636,0.0191909088527522,-0.807201424745539,-0.390367889379553,-0.819597341505008,0.645486103070954,-2.29893743707303,-3.42502314589315,-2.20350518161807,1.31575571344137,-0.0493274699385419,-1.4980764885036],[2.96351692903575,0.025393677658236,0.571743290328473,0.57623523222205,0.532184387890628,0.717416842338881,0.0118796525863296,0.00424028967088582,0.574743982382392,0.399510982723637,2.77214837877167,0.0117779213924517,0.450350651155402,0.24155594203224,0.875753656587396,0.945383637327567,0.523999555941092,0.806938489038178,0.934781730557365,1.74375156380534,0.801376673572235,0.78628614010444],[0.885878182458017,1.07914269033717,-3.19815801346922,1.5341163532205,3.77390201141289,3.36374545506279,-2.14477020098547,-0.962769410407005,0.594998525670415,1.11876684386724,-0.257585753607473,1.62939692100946,-1.79238427362016,-1.61605583408688,-0.935876585087619,0.682776893511326,-4.38728890322089,-4.24446620457474,-2.35724031566623,0.754554571162669,-0.061553413725731,-1.90525613017242],[0.375683174012925,0.280524122914688,0.00138308472330967,0.125001030887227,0.000160713906679763,0.000768924266360747,0.0319712248680594,0.335663254975892,0.551844456490663,0.263239620059127,0.796726625751355,0.103229020181659,0.0730714321754958,0.106082242023975,0.349336734113535,0.494747832615156,1.14772296122386e-05,2.19114385775445e-05,0.0184113276147022,0.450516290277135,0.950918477010483,0.0567467850672555]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>term<\\/th>\\n      <th>estimate<\\/th>\\n      <th>std.error<\\/th>\\n      <th>statistic<\\/th>\\n      <th>p.value<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"targets\":2,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 4, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":3,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 4, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":4,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 4, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":5,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 4, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"className\":\"dt-right\",\"targets\":[2,3,4,5]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[\"options.columnDefs.0.render\",\"options.columnDefs.1.render\",\"options.columnDefs.2.render\",\"options.columnDefs.3.render\"],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\n## Chisq test\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrop1(glm_heart, test = \"Chisq\") %>% tidy %>%\n    datatable()  %>%\n  formatRound(columns = c(\"df\", \"Deviance\", \"AIC\", \"LRT\", \"p.value\"), digits = 4)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-2a51574fe4e56729861b\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-2a51574fe4e56729861b\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\"],[\"&lt;none&gt;\",\"age\",\"sex\",\"cp\",\"trestbps\",\"chol\",\"fbs\",\"restecg\",\"thalach\",\"exang\",\"oldpeak\",\"slope\",\"ca\",\"thal\"],[null,1,1,3,1,1,1,2,1,1,1,2,4,2],[180.759309884195,181.934806663959,192.104740387691,202.060408912994,185.581701765978,181.658894256357,181.116882748888,182.137828803891,183.532859962897,183.959744865117,183.493363001495,190.168876586437,219.891623710329,193.333560837274],[224.759309884195,223.934806663959,234.104740387691,240.060408912994,227.581701765979,223.658894256357,223.116882748888,222.137828803891,225.532859962897,225.959744865118,225.493363001495,230.168876586437,255.891623710329,233.333560837274],[null,1.17549677976439,11.3454305034964,21.3010990287997,4.82239188178389,0.899584372161968,0.357572864693623,1.37851891969621,2.7735500787021,3.20043498092286,2.73405311730065,9.40956670224281,39.1323138261346,12.5742509530791],[null,0.27827467209503,0.000756338348450447,9.11551265618806e-05,0.0280923364381456,0.342893180685634,0.549857303974045,0.501947643850473,0.0958334032986631,0.073618687440082,0.0982297076879329,0.00905187508407152,6.54152741172985e-08,0.00186009916801808]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>term<\\/th>\\n      <th>df<\\/th>\\n      <th>Deviance<\\/th>\\n      <th>AIC<\\/th>\\n      <th>LRT<\\/th>\\n      <th>p.value<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"targets\":2,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 4, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":3,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 4, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":4,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 4, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":5,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 4, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"targets\":6,\"render\":\"function(data, type, row, meta) {\\n    return type !== 'display' ? data : DTWidget.formatRound(data, 4, 3, \\\",\\\", \\\".\\\", null);\\n  }\"},{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[\"options.columnDefs.0.render\",\"options.columnDefs.1.render\",\"options.columnDefs.2.render\",\"options.columnDefs.3.render\",\"options.columnDefs.4.render\"],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\n## ML model\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_ctrl <- trainControl(method = \"cv\",\n                        number = 5,\n                        summaryFunction = twoClassSummary,\n                        classProbs = TRUE,\n                        allowParallel=T,\n                        #index = cv_fold,\n                        verboseIter = FALSE,\n                        returnResamp = \"all\", \n                        savePredictions = \"final\", \n                        search = \"grid\")\n\n\n\n\n\nranger_grid <- expand.grid(splitrule = \"extratrees\",\n                        mtry = c(2, 5, 10),\n                        min.node.size = c(2, 5, 7))\n\n\nheart_randomforest <- train(target~ .,\n      data = heart,\n      trControl = train_ctrl,\n      tuneGrid = ranger_grid,\n      method = \"ranger\")\nheart_randomforest \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRandom Forest \n\n303 samples\n 13 predictor\n  2 classes: 'No_heart_disease', 'Heart_disease' \n\nNo pre-processing\nResampling: Cross-Validated (5 fold) \nSummary of sample sizes: 243, 242, 242, 242, 243 \nResampling results across tuning parameters:\n\n  mtry  min.node.size  ROC        Sens       Spec     \n   2    2              0.8974747  0.7687831  0.8303030\n   2    5              0.9009780  0.7761905  0.8363636\n   2    7              0.8989899  0.7833333  0.8303030\n   5    2              0.8944204  0.7619048  0.8363636\n   5    5              0.8893138  0.7690476  0.8303030\n   5    7              0.8921918  0.7616402  0.8242424\n  10    2              0.8880552  0.7616402  0.8363636\n  10    5              0.8884560  0.7616402  0.8303030\n  10    7              0.8880471  0.7690476  0.8242424\n\nTuning parameter 'splitrule' was held constant at a value of extratrees\nROC was used to select the optimal model using the largest value.\nThe final values used for the model were mtry = 2, splitrule = extratrees\n and min.node.size = 5.\n```\n:::\n:::\n\n## Var Importance\n\n::: {.cell}\n\n```{.r .cell-code}\npred <- function(heart_randomforest, heart)  {\n  results <- predict(heart_randomforest, newdata = heart, type = \"prob\")\n  return(results[[2L]])\n}\n```\n:::\n\n\n## Partial Dependence\n\n\n::: {.cell}\n\n```{.r .cell-code}\nX_pred <- heart[, .SD, .SDcols = !\"target\"] %>%\n  as.data.frame()\nmodel <- Predictor$new(model = heart_randomforest, \n                      data =X_pred,\n                      predict.function = pred,\n                      y = heart$target)\neffect <- FeatureEffects$new(model)\n```\n:::\n\n\n##\n\n\n::: {.cell}\n\n```{.r .cell-code}\neffect$plot(features = c( \"trestbps\"))\n```\n\n::: {.cell-output-display}\n![](heart_disease_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#effect\n```\n:::\n\n\n\n\n##\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimp <- FeatureImp$new(model, loss =\"ce\" )\n#imp\n\nvar_important <-imp$results %>% data.table()\n\nsetorder(var_important, -importance)\nplot(imp)\n```\n\n::: {.cell-output-display}\n![](heart_disease_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninteract <- Interaction$new(model, feature = \"thal\")\nplot(interact)\n```\n\n::: {.cell-output-display}\n![](heart_disease_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tictoc)\ntic()\n\nshap_list <- vector(\"list\", nrow(X_pred)) \n\nfor (i in 1:nrow(X_pred)) {\n  shap <- Shapley$new(model,  x.interest = X_pred[i, ], sample.size = 30)\n  shap_import <-shap$results %>% data.table()\n  shap_import <- shap_import[class == \"Heart_disease\"]\n  shap_list[[i]] <- shap_import[, record_id := i]\n\n  }\ntoc()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n54.071 sec elapsed\n```\n:::\n\n```{.r .cell-code}\nshap_values <- rbindlist(shap_list, fill = T)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggforce)\n\nshap_values[, feature := factor(feature, levels = rev(var_important$feature) )]\nminx <- shap_values[, min(phi.var)]\nmaxx <- shap_values[, max(phi.var)]\nggplot(shap_values, aes(feature, phi,  color = phi.var))+\n  #geom_point()+\n    ggbeeswarm::geom_quasirandom(groupOnX = FALSE, varwidth = TRUE, size = 0.9, alpha = 0.25) +\n  geom_hline(yintercept = 0) +\n  scale_color_gradient(low=\"#2187E3\", high=\"#F32858\", \n                       breaks=c(minx,maxx), labels=c(\"Low\",\"High\"), limits=c(minx,maxx))+ \n  theme_bw() + \n    theme(axis.line.y = element_blank(), \n          axis.ticks.y = element_blank(), # remove axis line\n          legend.position=\"bottom\") +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](heart_disease_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "heart_disease_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../site_libs/htmlwidgets-1.6.1/htmlwidgets.js\"></script>\n<link href=\"../../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/datatables-binding-0.27/datatables.js\"></script>\n<script src=\"../../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../../site_libs/dt-core-1.12.1/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../../site_libs/dt-core-1.12.1/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/dt-core-1.12.1/js/jquery.dataTables.min.js\"></script>\n<link href=\"../../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}