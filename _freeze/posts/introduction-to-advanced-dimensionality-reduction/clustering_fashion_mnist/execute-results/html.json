{
  "hash": "dd661b3f4182c7ad5ad5cc9630385f58",
  "result": {
    "markdown": "---\ntitle: \"Clustering Fashion mnist\"\nauthor: \"Mburu\"\ndate: \"4/8/2020\"\noutput:\n  html_document:\n    toc: true\n    toc_depth: 2\n    toc_float:\n      collapsed: false\n      smooth_scroll: false\n    theme: united\n    highlight: pygments\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(data.table)\n\nload(\"fashion_mnist.rda\")\n```\n:::\n\n\n## Process\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##\nxy_axis <- data.frame(x = expand.grid(1:28, 28:1)[,1],\n                      y = expand.grid(1:28, 28:1)[,2])\n\n\n# Get the data from the last image\nsample_10 <- fashion_mnist[sample(1:.N, 10), -1] %>% as.matrix()\nsample_10 <- t(sample_10)\n\nplot_data <- cbind(xy_axis, sample_10 )\n\nsetDT(plot_data, keep.rownames = \"pixel\")\n# Observe the first records\nhead(plot_data) %>% kable()\n```\n:::\n\n\n\n## plot Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_data_m <- melt(plot_data, id.vars = c(\"pixel\", \"x\", \"y\"))\n\n# Plot the image using ggplot()\nggplot(plot_data_m, aes(x, y, fill = value)) +\n    geom_raster()+\n     facet_wrap(~variable)+\n    scale_fill_gradient(low = \"white\",\n                        high = \"black\", guide = FALSE)+\n    theme(axis.line = element_blank(),\n                  axis.text = element_blank(),\n                  axis.ticks = element_blank(),\n                  axis.title = element_blank(),\n                  panel.background = element_blank(),\n                  panel.border = element_blank(),\n                  panel.grid.major = element_blank(),\n                  panel.grid.minor = element_blank(),\n                  plot.background = element_blank())\n```\n:::\n\n\n\n## Choosing K\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(100)\n\nfashion_small <- fashion_mnist[sample(1:.N, 10000)]\n\nkmeans_list <- list()\ntot_withinss <- c()\nfor (k in 1:20) {\n  \n  kmeans_mnist <- kmeans(fashion_small[, -1], centers =  k)\n  tot_withinss[k] <- kmeans_mnist$tot.withinss\n}\n\n\nplot(tot_withinss)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}